diff -up flowcanvas-0.7.1/src/Canvas.cpp.graphviz23 flowcanvas-0.7.1/src/Canvas.cpp
--- flowcanvas-0.7.1/src/Canvas.cpp.graphviz23	2013-04-23 16:03:00.704493594 -0400
+++ flowcanvas-0.7.1/src/Canvas.cpp	2013-04-23 16:04:55.025489508 -0400
@@ -1253,21 +1253,21 @@ Canvas::layout_dot(bool use_length_hints
 	 */
 
 	GVC_t* gvc = gvContext();
-	Agraph_t* G = agopen((char*)"g", AGDIGRAPH);
+	Agraph_t* G = agopen((char*)"g", Agdirected, NULL);
 
 	nodes.gvc = gvc;
 	nodes.G = G;
 
 	if (_direction == HORIZONTAL)
-		agraphattr(G, (char*)"rankdir", (char*)"LR");
+		agattr(G, AGRAPH, (char*)"rankdir", (char*)"LR");
 	else
-		agraphattr(G, (char*)"rankdir", (char*)"TD");
+		agattr(G, AGRAPH, (char*)"rankdir", (char*)"TD");
 
 	unsigned id = 0;
 	for (ItemList::const_iterator i = _items.begin(); i != _items.end(); ++i) {
 		std::ostringstream ss;
 		ss << "n" << id++;
-		Agnode_t* node = agnode(G, strdup(ss.str().c_str()));
+		Agnode_t* node = agnode(G, strdup(ss.str().c_str()), true);
 		if (boost::dynamic_pointer_cast<Module>(*i)) {
 			ss.str("");
 			ss << (*i)->width() / 96.0;
@@ -1310,7 +1310,7 @@ Canvas::layout_dot(bool use_length_hints
 
 		assert(src_node && dst_node);
 
-		Agedge_t* edge = agedge(G, src_node, dst_node);
+		Agedge_t* edge = agedge(G, src_node, dst_node, NULL, true);
 
 		if (use_length_hints && c->length_hint() != 0) {
 			std::ostringstream len_ss;
@@ -1325,7 +1325,7 @@ Canvas::layout_dot(bool use_length_hints
 		if (partner) {
 			GVNodes::iterator p = nodes.find(partner);
 			if (p != nodes.end())
-				agedge(G, i->second, p->second);
+				agedge(G, i->second, p->second, NULL, true);
 		}
 	}
 
diff -up flowcanvas-0.7.1/wscript.graphviz23 flowcanvas-0.7.1/wscript
--- flowcanvas-0.7.1/wscript.graphviz23	2013-04-23 16:05:07.326489068 -0400
+++ flowcanvas-0.7.1/wscript	2013-04-23 16:06:29.683486124 -0400
@@ -39,6 +39,7 @@ def configure(conf):
 	autowaf.configure(conf)
 	autowaf.display_header('FlowCanvas Configuration')
 	conf.check_tool('compiler_cxx')
+	conf.env['LIB_AGRAPH'] = ['cgraph' if l == 'graph' else l for l in conf.env['LIB_AGRAPH']]
 	autowaf.check_pkg(conf, 'libgvc', uselib_store='AGRAPH',
 	                  atleast_version='2.8', mandatory=False)
 	autowaf.check_pkg(conf, 'gtkmm-2.4', uselib_store='GLIBMM',
